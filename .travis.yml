# the purpose of this file is to give travis instructions on what to do when it detects that we push a new version of our code on github
#
# the process is as follow:
# 1 - tell Travis we need a copy of Docker running since our entire project is working with docker
# 2 - Build our image with Dockerfile.env -> Travis is used to run test so this is the development environment
# 3 - tell Travis how to run our test suit
# 4 - tell Travis how to deploy our code to AWS
#
# when using docker we need super user permission so this tells Travis that the sudo command is required 
sudo: required

# this tells Travis that we need the docker cli pre-installed
services:
    - docker

# this tells Travis what to do before running our tests or deploy our project
before_install:
    # we need to tag the resulting image as we won't have the possibility to run the container by using the id of the image since this is a set of instruction that will be run automatically
    - docker build -t ivanpilot/docker-react -f Dockerfile.dev . 

# this tells Travis what command to execute to actually run our test suit
script:
    # at the end of each command, Travis expect the process to terminate with a 0 status code indicating there is no error so for each command we need to make sure that it will terminate and not hang forever
    - docker run ivanpilot/docker-react npm run test -- --coverage

# this tells Travis what to do once the test run has successfully completed
# in the below example we are telling Travis how to deploys our app to AWS
deploy:
    provider: elasticbeanstalk
    region: "eu-west-2"
    app: "docker-react"
    env: "DockerReact-env"
    bucket_name: "elasticbeanstalk-eu-west-2-660931516180"
    bucket_path: "docker-react"
    on:
        # this is not related to AWS config but to tell Travis to do the deploy only when the master branch has changed - not the other feature branches
        branch: master
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: 
        secure: "$AWS_SECRET_KEY"
